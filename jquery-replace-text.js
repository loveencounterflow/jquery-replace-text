// Generated by CoffeeScript 1.9.0
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  $.fn.text_nodes = function() {
    var R;
    R = [];
    this.each(function() {
      var fn;
      fn = arguments.callee;
      return ($(this)).contents().each(function() {
        if (this.nodeType === 3) {
          return R.push(this);
        } else {
          return fn.apply($(this));
        }
      });
    });
    return $(R);
  };

  $.fn.replace_text = function(matcher, replacement, is_raw, text_nodes) {
    var to_be_removed;
    if (is_raw == null) {
      is_raw = false;
    }
    if (text_nodes == null) {
      text_nodes = null;
    }
    to_be_removed = is_raw ? null : [];
    return (text_nodes != null ? text_nodes : this.text_nodes()).each(function(idx) {
      var new_value;
      if ((new_value = this.nodeValue.replace(matcher, replacement)) !== this.nodeValue) {
        if (!is_raw && __indexOf.call(new_value, '<') >= 0) {
          ($(this)).before(new_value);
          to_be_removed.push(this);
        } else {
          this.nodeValue = new_value;
        }
      }
      if (!is_raw && to_be_removed.length > 0) {
        return ($(to_be_removed)).remove();
      }
    });
  };

}).call(this);
